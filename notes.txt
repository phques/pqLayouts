
+ with the keyboard low level hook and SendInput, we are working with KEYS (virtual keys, ie VK_xx),
  not characters .. ie if we want to map (unshifted) key 'q' to '?',
  we need to send shift-/ (?)

+ the VK_ values for a..z are A..Z, uppercase !
 -> using VkKeyScanExA() seems to handle this correctly

 -> NOTE, this also means doing a French layout is not easily possible !!
  (again we don't output characters, but keys ..)
   -> it would need to find the VK_xx code(s) from a french MS layout,
   when we use our mappings, we need to have the correct MS layout active too

   -> chars like 'à' that I type with a deakey + a, how to generate this ??
      SendInput both ??
      -> possibly use the US intl layout, it might have all required accented chars on altGr?
         not really, needs dead keys
	   -> use azerty ?
	   -> build my own !!?

   -> it seems like VkKeyScanExA w/o a kbdLayout parameter looks in all installed MS layouts !
     -> for eg passing é while in a US layout, will correctly find / (which output é in CAFR layout)

   -> not very clear behaviour .. if the CAFR layout is active VkKeyScanExA seems to actually fail !???
      also à does not map correctly ? (kinda expected)
      will need to try loading a kbd layout and pass it to VkKeyScanExA

   -> probably works if we load and pass a KHL for french layout to VkKeyScanExA
     (now using VkKeyScanA)

 
+ -- scancode vs VK ----

// with Windows layouts that use AltGr, right Alt actually outputs
// LCtrl + RAlt .. but with a weird scancode for LCtrl, (0x21D instead of 0x1D)
// ie we don't send exactly the same vk / scancode, it screws up and LCtrl up is never generated !!!

@A20D0B   wparam: 104 vk: A2 scan: 21D  dn  ex flags: 00100000
@A20D0B   wparam: 104 vk: A5 scan: 38  dn  EX flags: 00100001

+ Note also that apparently, contrary to what I would expect, 
  a scancode does NOT identify a physical key, (I thought that was the definition of a scancode !!!)
  -> both left and right Ctrl have the same scancode (right ones are flagged 'extended' though)
  -> BUT they DO have different VKs !
  -> also see nte above for AltGr's LCtrl

+ getting the scancode from the VK does not seem to be 100% possible !
UINT scancode = MapVirtualKeyExA(vk, MAPVK_VK_TO_VSC_EX, NULL);
// a few keys don't seem to properly convert to scan code (kbd specific?)
//## PrtScrn, Pause don't convert to the scancode that we received in the kbd hook event !?

-----------

+? should map keys based on both (VK & scancode), to avoid probs for eg w. AltGr,
  see above
 => how to be certain I have the correct scancodes ??
    -> need to learn the kbd ?? pretty annoying
    -> I guess that mapping on vk_scan and ignoring unknown values should be Ok

----


*** 2021-0417 ***
** 'late-chords' branch **

this branch tries a different approach to chording.
instead of 'eating' the keys tha we receive, accumulating them in a possible chord,
then if it's not a chord, replay the keys 9having bugs witht his method)
instead,
-> we let keys through, trying to build a chord as we go along
   if we get a successful chord build (keys in proper sequence of down + keys up)
   then we output backspaces to erase the characters that were generated
   and then output the chord as before

.. there are problems with this:

- it can be used only (almost) for chords that output text, nav/edit is problematic
  e.g. if text is selected and we try to chord something, 
   then the (temp) output of keys of the chord erase / replace the selected text !
  e.g. if a chord is supposed to do 'copy', ctrl-c, it will not work

- having to 'undo' the output from when the keys were pressed before we id a chord
  means that the keys allowed for chord are limited to doing simple 1char output,
  e/g a key that output CR or BS can usually not be undone.



**********

+ chording
---

+ bug: because of chording, 
  - shift-xx does not shift unless we keep shift done when press 'xx'
  (shift is not kept in the 'replay sequence')
  - same thing for alt layer access

+ bug: shift-shift / caps lock doesn't work anymore
+ ctrl on alt layer doesnt work

+ bug: sometimes stays stuck in chord building mode (when doing it on alt layer?)
 (haven't happened in a while)
 - also had a case of stuck alt key

+ possibly use a different approach:
  gather keys in a chord as they are typed,
  look for a valid chord,
  IF we have a valid chord,
  - on either
   - key up
   - keydown that invalidates the current chord,
   - keydown not part of steakpower
   THEN use the last found chord
   and then output the other key ?

+ give an error if trying to define chords before stkpower

+ 'repeat' key

+ multi chars output chords:
  + bug: outut "sp" is interpreted a the SP key !!
    -> make all key names uppercase?
->? for 'steaks', use /sse dd/ to enter literal text ??
  /sp/ would be "sp" not a space
  /^c/ "^c" not ctrl-c
  Would also permit to have spaces in output:
  /this is some text/

+ reverse order of chord def vs chord ouput:
  P-P  .


--- usage ideas

  (does not work very well)
+ use 2keys chords to do consonants to limit use of alt layer

+ for consonants chords (to reduce need to use alt multiple times in a row)
  : auto-generate (w. a pgrm) (or in pqLayouts !!? dont think so)
    all permutations chords to access in a logical manner two consecutives consonants from two layers
    - right hand presses both wanted keys (from current layer + other layer),
    - left hand presses keys to indicate consonants chording 
      - use -k and -w for left to right / right to left
        ie, indicates which one is one the corrent layer
    *-> need to be 'geographically' aware, some of the chords' left / right logic is reversed
    - use chords with extra key on the left hand iso using layer access


---

+ one-shot modifier, layer
  (set temp 'need xyz' flag in found action key?)

+ see about how Plover handles kbd hook & text output,
  possibility of using its lib ?
  -> this could let me have a Mac version of pqLayouts !?

+ add support for 'alt' prefix on char, 
  -> alt-tab !!
  -> ctrl-shift (Sublime Text, column selection)
